---
import type { GetStaticPathsOptions, Page } from 'astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
// import Pagination from '../../components/Pagination.astro';
// import PostPreview from '../../components/PostPreview.astro';
// import Subscribe from '../../components/Subscribe.astro';
import siteConfig from '../../data/site-config';
import { sortItemsByDateDesc } from '../../utils/data-utils';
import { sanityClient } from 'sanity:client';
import ArrowRight from '../../icons/ArrowRight.astro';
import FormattedDate from '../../components/FormattedDate.astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const posts = (await getCollection('blog')).sort(sortItemsByDateDesc);
    return paginate(posts, { pageSize: siteConfig.postsPerPage || 4 });
}

type Props = { page: Page<CollectionEntry<'blog'>>; class?: string };

const { class: className } = Astro.props;

const posts = await sanityClient.fetch(`*[_type == "post" && defined(slug)] | order(publishedAt desc)`);
---

<BaseLayout
    title="Blog"
    description="Embark on a journey of personal insights and experiences through my blog"
    image={{ src: '/dante-preview.jpg', alt: 'The preview of the site' }}
    showHeader={false}
>
    <h1 class="mb-12 font-serif italic sm:mb-16">Blog Archive</h1>
    <!-- {blog.map((post) => <PostPreview post={post} class="mb-10 sm:mb-12" />)} -->

    {
        posts.map((post: any) => (
            <a class:list={['flex justify-between items-start gap-8 group', className]} href={`/blog/${post.slug.current}/`}>
                <article class="grow">
                    <h2 class="text-xl leading-tight font-serif font-medium group-hover:underline group-hover:decoration-dashed group-hover:underline-offset-4 group-hover:decoration-1 sm:text-2xl">
                        {post.title}
                    </h2>
                    <div class="mt-1 text-sm leading-normal">
                        <FormattedDate date={post?.publishedAt} />
                    </div>
                    {post?.seo?.description && <div class="mt-3 text-sm leading-normal">{post.seo.description}</div>}
                </article>
                <div class="hidden font-serif italic opacity-0 transition group-hover:opacity-100 sm:inline-flex sm:gap-1 sm:items-center sm:shrink-0">
                    Read Post <ArrowRight class="fill-current w-4 h-4" />
                </div>
            </a>
        ))
    }
    <!-- <Subscribe class="my-16 sm:my-24" /> -->
</BaseLayout>
